version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: faceswap_postgres
    environment:
      POSTGRES_DB: faceswap
      POSTGRES_USER: faceswap_user
      POSTGRES_PASSWORD: faceswap_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U faceswap_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: faceswap_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API (Phase 1+)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: faceswap_backend
    environment:
      DATABASE_URL: postgresql://faceswap_user:faceswap_password@postgres:5432/faceswap
      REDIS_URL: redis://redis:6379/0
      USE_GPU: "false"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/storage:/app/storage
      - ./backend/models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    profiles:
      - full  # Only run with 'docker-compose --profile full up'

  # Celery Worker (Phase 1+)
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: faceswap_celery_worker
    environment:
      DATABASE_URL: postgresql://faceswap_user:faceswap_password@postgres:5432/faceswap
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      USE_GPU: "false"
    volumes:
      - ./backend:/app
      - ./backend/storage:/app/storage
      - ./backend/models:/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A app.services.faceswap.processor worker --loglevel=info
    profiles:
      - full

  # Frontend (Phase 2+)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: faceswap_frontend
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev
    profiles:
      - full

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: faceswap_network
